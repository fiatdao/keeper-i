on:
  push:
    branches:
      - release-goerli

name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  INSTANCE: keeper-trigger-auctions
  ZONE: europe-north1-a

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Copy all secrets to the required files, create the files
      - name: Create state.json file
        run: |
          touch state.json

      - name: Create env file
        run: |
          touch .env
          echo ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }} >> .env
          echo NETWORK=goerli >> .env
          cat .env

      - name: Create private_key file
        run: |
          touch private_key
          echo ${{ secrets.PRIVATE_KEY_GOERLI }} >> private_key
          cat private_key

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true  # Authenticate the Cloud Run action

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.INSTANCE }}:${{  github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.INSTANCE }}:${{  github.sha }}

      # Add pruning and IP address update to VM startup script
      - name: Update startup script to prune old images
        run: |-
          gcloud compute instances add-metadata ${{ env.INSTANCE }} \
          --zone ${{ env.ZONE }} \
          --metadata=startup-script="#! /bin/bash
           docker image prune -af"

      - name: Deploy to Compute Engine
        run: |-
          gcloud compute instances update-container ${{ env.INSTANCE }} \
            --zone ${{ env.ZONE }} \
            --container-image gcr.io/${{ env.PROJECT_ID }}/${{ env.INSTANCE }}:${{  github.sha }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
