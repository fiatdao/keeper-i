on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

env:
  REGISTRY: "registry.digitalocean.com/fiatdao-registry"
  TAG: "latest"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Setup local files
        run: |
          touch keeper/state.json
          touch keeper/.env
          echo ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY_GOERLI }} >> keeper/.env
          echo NETWORK=goerli >> keeper/.env
          touch keeper/private_key
          echo ${{ secrets.PRIVATE_KEY_GOERLI }} >> keeper/private_key

      - name: Build container images
        run: REGISTRY=$(echo $REGISTRY) TAG=$(echo $TAG) docker compose build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: echo "Todo"

      - name: Push image to DigitalOcean Container Registry
        run: REGISTRY=$(echo $REGISTRY) TAG=$(echo $TAG) docker compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_GOERLI }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yml"
          target: "/root"
      
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST_GOERLI }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},TAG
          script: |
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            docker stop $(docker ps -q)
            docker rmi $(docker images -q)
            docker volume rm $(docker volume ls -q)
            REGISTRY=$(echo $REGISTRY) TAG=$(echo $TAG) docker compose pull
            REGISTRY=$(echo $REGISTRY) TAG=$(echo $TAG) docker compose up -d
